generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement()) //database id
  userId          String? //user 일련변호 (UserClass와 함께 사용)
  userType        UserType         @relation(fields: [userTypeId], references: [id]) //user 구분
  userTypeId      Int
  userName        String //본명
  name            String //가입 이름
  password        String //비밀번호
  phone           String           @unique //핸드폰번호 (실직적인 user Id)
  birth           String //생년월일
  license         String? //사업자등록증 url
  vehicleNumber   String? //차량번호
  vehicleWeight   VehicleWeight?   @relation(fields: [vehicleWeightId], references: [id]) //차량무게
  vehicleWeightId Int?
  vehicleType     VehicleType?     @relation(fields: [vehicleTypeId], references: [id]) //차량종류
  vehicleTypeId   Int?
  recommendUserId Int? //내가 추천한 회원 id
  gender          String //성별
  status          String //user 상태 (정상, 차단, 탈퇴 등)
  workRegion      Region[]         @relation("userWorkRegion")
  accessedRegion  String? //마지막 접속 지역
  sms             Boolean //이벤트 혜택 수신
  grade           Grade            @relation(fields: [gradeId], references: [id]) //회원 등급
  gradeId         Int
  point           Point?           @relation(fields: [pointId], references: [id]) //포인트
  pointId         Int
  pointBreakdown  PointBreakdown[] //포인트 내역
  avatar          String? //프로필 사진 url
  withdrawalDate  DateTime? //탈퇴날짜
  greeting        String? //인사말
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  order           Order[]
}

model UserType {
  id       Int     @id @default(autoincrement())
  code     String //ex) S, P, F...
  type     String //일반회원(ORDINARY), 기사회원(PERSONAL), 기업회원(COMPANY)
  category String? //가구, 인테리어, 전자제품, 인력, 청소/철거, 기타업종
  User     User[]
}

//P:일반회원(ORDINARY), S:기사회원(PERSONAL)
//(COMPANY) F:기업회원(가구), I:기업회원(인테리어), E:기업회원(전자제품), W:기업회원(인력), C :기업회원(청소, 철거), G :기업회원(기타업종)

model Region {
  id     Int    @id @default(autoincrement())
  region String //작업지역
  user   User[] @relation("userWorkRegion")
}

model Point {
  id              Int     @id @default(autoincrement())
  curPoint        Int //현재 포인트
  accountName     String? //예금주
  accountNumber   String? //계좌번호
  bank            String? //은행
  accruedPoint    Int     @default(0) //누적포인트
  withdrawalPoint Int     @default(0) //출금포인트
  subtractPoint   Int     @default(0) //차감포인트
  addPoint        Int     @default(0) //지급포인트
  user            User[]
}

model PointBreakdown {
  id     Int      @id @default(autoincrement())
  date   DateTime //충전, 출금, 차감, 지급 날짜
  type   String //충전(CHARGE), 출금(WITHDRAW), 차감(MINUS), 지급(PLUS)
  point  Int //거래 포인트
  memo   String? //특이사항
  user   User?    @relation(fields: [userId], references: [id])
  userId Int?
}

model Grade {
  id    Int    @id @default(autoincrement())
  grade String //회원 등급
  user  User[]
}

model Order {
  id            Int           @id @default(autoincrement())
  registUser    User          @relation(fields: [userId], references: [id]) //등록자
  userId        Int
  acceptUser    Int? //작업자
  registDate    String //등록날짜
  registTime    String //등록시간
  workDate      String //작업날짜
  workTime      String //작업시간
  workType      String //상차, 하차, 양사
  workHeight    String //저층, 중층, 상층
  workFloor     String //작업 층
  upDown        String //올림,내림, 양사
  phone         String //등록자 전화번호
  workQuantity  String //작업 물량
  address       String //작업주소
  sendAddress   String? //양사일 경우 도착 주소
  cost          Int //작업 금액
  commission    Float //수수료
  onSitePayment Boolean //현장결제
  memo          String? //메모
  status        OrderStatus[] @relation("orderStatus") //작업 상태 (작업요청, 작업예약, 작업 중, 작업완료)
  // status  OrderStatus? @relation(fields: [statusId], references: [id])
  // statusId Int
  
  private       Boolean //공개여부
  workGrade     String //작업등급
}

model Commission {
  id         Int   @id @default(autoincrement())
  commission Float //수수료
}

model OrderTheme {
  id     Int    @id @default(autoincrement())
  type   String //상차, 하차, 양사
  height String //저층, 중층, 상층
  price  Int //작업 금액
}

model OrderStatus {
  id     Int     @id @default(autoincrement())
  status String //작업요청, 작업예약, 작업 중, 작업완료
  order  Order[] @relation("orderStatus")//TODO: 연결 변경
  //  order            Order[]
}

model VehicleType {
  id   Int    @id @default(autoincrement())
  type String // ex) 스카이, 사다리
  User User[]
}

model VehicleWeight {
  id     Int    @id @default(autoincrement())
  weight String // ex) 1톤, 2톤
  User   User[]
}

model Manager {
  id         Int      @id @default(autoincrement())
  managerId  String //관리자 ID
  password   String //관리자 PASSWORD
  accessedAt DateTime //마지막 접속 날짜
}
